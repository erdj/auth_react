{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport AuthService from '../services/AuthService';\nimport axios from 'axios';\nimport { API_URL } from './../http/index';\nexport default class Store {\n  constructor() {\n    this.user = {};\n    this.isAuth = false;\n    makeAutoObservable(this);\n  }\n\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n\n  setUser(user) {\n    this.user = user;\n  }\n\n  async login(email, password) {\n    try {\n      const response = await AuthService.login(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      console.log((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  }\n\n  async registration(email, password) {\n    try {\n      const response = await AuthService.registration(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n\n      console.log((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message);\n    }\n  }\n\n  async logout() {\n    try {\n      const response = await AuthService.logout();\n      console.log(response);\n      localStorage.removeItem('token');\n      this.setAuth(false);\n      this.setUser({});\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n\n      console.log((_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message);\n    }\n  }\n\n  async checkAuth() {\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      var _e$response4, _e$response4$data;\n\n      console.log((_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message);\n    }\n  }\n\n}","map":{"version":3,"sources":["D:/react/react_auth_jwt_ubli/client/src/store/store.js"],"names":["makeAutoObservable","AuthService","axios","API_URL","Store","constructor","user","isAuth","setAuth","bool","setUser","login","email","password","response","console","log","localStorage","setItem","data","accessToken","e","message","registration","logout","removeItem","checkAuth","get","withCredentials"],"mappings":"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","sourcesContent":["import {makeAutoObservable} from 'mobx'\r\nimport AuthService from '../services/AuthService';\r\nimport axios from 'axios'\r\nimport { API_URL } from './../http/index';\r\n\r\nexport default class Store {\r\n    user = {};\r\n    isAuth = false;\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setAuth(bool) {\r\n        this.isAuth = bool;\r\n    }\r\n    \r\n    setUser(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    async login(email, password) {\r\n        try {\r\n            const response = await AuthService.login(email, password)\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user)\r\n        } catch (e) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async registration(email, password) {\r\n        try {\r\n            const response = await AuthService.registration(email, password)\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user)\r\n        } catch (e) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async logout() {\r\n        try {\r\n            const response = await AuthService.logout()\r\n            console.log(response);\r\n            localStorage.removeItem('token');\r\n            this.setAuth(false);\r\n            this.setUser({})\r\n        } catch (e) {\r\n            console.log(e.response?.data?.message);\r\n        }\r\n    }\r\n\r\n    async checkAuth() {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/refresh`, {withCredentials: true})\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.data.user)\r\n        } catch (e) {\r\n            console.log(e.response?.data?.message);            \r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}